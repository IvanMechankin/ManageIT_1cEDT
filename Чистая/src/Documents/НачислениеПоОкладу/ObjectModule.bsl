
Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.Зарплата.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Оклад КАК Оклад,
	               |	Сотрудники.Ссылка КАК Сотрудник
	               |ИЗ
	               |	Документ.НачислениеПоОкладу.Сотрудники КАК НачислениеПоОкладуСотрудники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	               |		ПО НачислениеПоОкладуСотрудники.Сотрудник = Сотрудники.Ссылка
	               |			И (НачислениеПоОкладуСотрудники.Ссылка = &Ссылка)";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.Зарплата.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.НачисленияУдержания.ОплатаПоОкладу;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = НачалоМесяца(Дата);
		Движение.ПериодДействияКонец = КонецМесяца(Дата);
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Показатель = Выборка.Оклад;
				
	КонецЦикла; 
	
	Движения.Зарплата.Записать();
	
	
	
	
	
	Для Каждого Движение Из Движения.Зарплата Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.НачисленияУдержания.ОплатаПоОкладу Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("Регистратор, Сотрудник", Ссылка, Движение.Сотрудник);
		Норма = РегистрыРасчета.Зарплата.ПолучитьДанныеГрафика(Отбор, 
		ВидПериодаРегистраРасчета.ПериодДействия)[0].РабочийДень;
		Факт = РегистрыРасчета.Зарплата.ПолучитьДанныеГрафика(Отбор, 
		ВидПериодаРегистраРасчета.ФактическийПериодДействия)[0].РабочийДень;
		Движение.Сумма = ?(Норма = 0, 0, Движение.Показатель * Факт / Норма);
	КонецЦикла;
	
	
	Движения.Зарплата.Записать(, Истина);
	
		
		
	
	


КонецПроцедуры
